[{"/home/roman/Рабочий стол/motivation/front/src/reportWebVitals.js":"1","/home/roman/Рабочий стол/motivation/front/src/components/Motivation/Profile.js":"2","/home/roman/Рабочий стол/motivation/front/src/components/Incidents/Incidents.js":"3","/home/roman/Рабочий стол/motivation/front/src/components/Motivation/Salary.js":"4","/home/roman/Рабочий стол/motivation/front/src/components/Motivation/Attendance.js":"5","/home/roman/Рабочий стол/motivation/front/src/components/Releases/ReleasesEdit.js":"6","/home/roman/Рабочий стол/motivation/front/src/components/Incidents/IncidentCreate.js":"7","/home/roman/Рабочий стол/motivation/front/src/components/Motivation/KpiReadForm.js":"8","/home/roman/Рабочий стол/motivation/front/src/components/Motivation/SalaryTest.js":"9","/home/roman/Рабочий стол/motivation/front/src/components/Releases/ReleasesCreate.js":"10","/home/roman/Рабочий стол/motivation/front/src/components/Sprints/SprintCreate.js":"11","/home/roman/Рабочий стол/motivation/front/src/components/Motivation/Kpi.js":"12","/home/roman/Рабочий стол/motivation/front/src/components/Sprints/Sprints.js":"13","/home/roman/Рабочий стол/motivation/front/src/components/Incidents/IncidentEdit.js":"14"},{"size":362,"mtime":1606129548000,"results":"15","hashOfConfig":"16"},{"size":3151,"mtime":1611125304989,"results":"17","hashOfConfig":"16"},{"size":8160,"mtime":1611212910188,"results":"18","hashOfConfig":"16"},{"size":2603,"mtime":1611140379078,"results":"19","hashOfConfig":"16"},{"size":1706,"mtime":1611084064000,"results":"20","hashOfConfig":"16"},{"size":4633,"mtime":1610982835000,"results":"21","hashOfConfig":"16"},{"size":4745,"mtime":1611213113807,"results":"22","hashOfConfig":"16"},{"size":2924,"mtime":1606836198000,"results":"23","hashOfConfig":"16"},{"size":2784,"mtime":1611213840739,"results":"24","hashOfConfig":"16"},{"size":4335,"mtime":1611119080181,"results":"25","hashOfConfig":"16"},{"size":3393,"mtime":1611119087213,"results":"26","hashOfConfig":"16"},{"size":7834,"mtime":1611119181136,"results":"27","hashOfConfig":"16"},{"size":6055,"mtime":1611211464294,"results":"28","hashOfConfig":"16"},{"size":5338,"mtime":1611212528959,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"118g5vz",{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/roman/Рабочий стол/motivation/front/src/reportWebVitals.js",[],"/home/roman/Рабочий стол/motivation/front/src/components/Motivation/Profile.js",["60"],"/home/roman/Рабочий стол/motivation/front/src/components/Incidents/Incidents.js",["61"],"/home/roman/Рабочий стол/motivation/front/src/components/Motivation/Salary.js",[],"/home/roman/Рабочий стол/motivation/front/src/components/Motivation/Attendance.js",[],"/home/roman/Рабочий стол/motivation/front/src/components/Releases/ReleasesEdit.js",[],"/home/roman/Рабочий стол/motivation/front/src/components/Incidents/IncidentCreate.js",[],"/home/roman/Рабочий стол/motivation/front/src/components/Motivation/KpiReadForm.js",[],"/home/roman/Рабочий стол/motivation/front/src/components/Motivation/SalaryTest.js",["62","63","64","65","66","67"],"/home/roman/Рабочий стол/motivation/front/src/components/Releases/ReleasesCreate.js",[],"/home/roman/Рабочий стол/motivation/front/src/components/Sprints/SprintCreate.js",["68"],"import React from 'react';\nimport 'antd/dist/antd.css';\nimport './Sprints.css';\nimport { Form, Input, Button, Select, Drawer } from 'antd';\nimport { DatePicker } from 'antd';\nimport moment from 'moment';\nimport 'moment/locale/ru';\nmoment.locale('ru');\n\nconst { TextArea } = Input;\nconst { Option } = Select;\n\nconst formItemLayout = {\n  labelCol: {\n    xs: {\n      span: 24,\n    },\n    sm: {\n      span: 12,\n    },\n  },\n  wrapperCol: {\n    xs: {\n      span: 24,\n    },\n    sm: {\n      span: 12,\n    },\n  },\n};\n\nclass SprintCreate extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      dateStart: '',\n      dateEnd: '',\n    }\n  }\n\n\n  onFinish = (fieldsValue) => {\n    fieldsValue.dateStart = this.state.dateStart;\n    fieldsValue.dateEnd = this.state.dateEnd;\n\n    if (!fieldsValue.name) {\n      fieldsValue.name = '';\n    }\n\n    if (!fieldsValue.percent) {\n      fieldsValue.percent = 0;\n    }\n\n    this.props.createSprint(fieldsValue);\n  }\n\n  onChangeDateStart = (date, dateString) => {\n    this.setState({\n      dateStart: dateString\n    })\n  }\n\n  onChangeDateEnd = (date, dateString) => {\n    this.setState({\n      dateEnd: dateString\n    })\n  }\n\n  renderTeams = () => {\n    const {\n      teams\n    } = this.props;\n\n    return (\n      <Select className={'releaseFormTitle'}>\n        {teams.length && teams.map(team => {\n          return (\n            <Option key={team.id} value={team.id}>{team.name}</Option>\n          )\n        })}\n      </Select>\n    )\n  }\n\n  render() {\n    const {\n      isOpen,\n      onOpenDrawerCreate\n    } = this.props;\n\n    return (\n      <>\n        <Drawer\n          width={450}\n          title=\"Добавить инцидент\"\n          placement=\"right\"\n          closable={false}\n          onClose={() => onOpenDrawerCreate(false)}\n          visible={isOpen}\n          destroyOnClose={true}\n        >\n          <Form\n            {...formItemLayout}\n            layout={'horizontal'}\n            onFinish={this.onFinish}\n          >\n            <Form.Item rules={[\n              {\n                required: true\n              }\n            ]} labelAlign='left' name=\"team\" label=\"Команда\">\n              {this.renderTeams()}\n            </Form.Item>\n            <Form.Item rules={[\n              {\n                required: true\n              }\n            ]} labelAlign='left' name=\"name\" label=\"Название\">\n              <Input />\n            </Form.Item>\n            <Form.Item rules={[\n              {\n                required: true\n              }\n            ]} labelAlign='left' name=\"dateStart\" label=\"Дата начала\">\n              <DatePicker\n                onChange={this.onChangeDateStart} />\n            </Form.Item>\n            <Form.Item rules={[\n              {\n                required: true\n              }\n            ]} labelAlign='left' name=\"dateEnd\" label=\"Дата окончания\">\n              <DatePicker\n                onChange={this.onChangeDateEnd} />\n            </Form.Item>\n            <Form.Item labelAlign='left' name=\"percent\" label=\"Выполнение\">\n              <Input />\n            </Form.Item>\n            <Form.Item >\n              <Button style={{marginRight: '15px'}} htmlType='submit' type=\"primary\">Сохранить</Button>\n            </Form.Item>\n          </Form>\n        </Drawer>\n      </>\n    );\n  }\n};\n\nexport default SprintCreate;\n","/home/roman/Рабочий стол/motivation/front/src/components/Motivation/Kpi.js",["69"],"import React, { Component } from 'react';\nimport './Kpi.css';\nimport moment from 'moment';\nimport 'moment/locale/ru';\nimport 'antd/dist/antd.css';\nimport { Table, Popconfirm, Drawer, Select } from 'antd';\nimport KpiCreateForm from './KpiCreateForm';\nimport KpiReadForm from './KpiReadForm';\nimport {\n  EditFilled,\n  DeleteFilled,\n} from '@ant-design/icons';\n\nmoment.locale('ru');\n\nconst { Option } = Select;\n\nclass InfoCard extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: [],\n      isShowDrawerCreate: false,\n      isShowDrawerRead: false,\n      periods: [],\n      currentPeriod: '',\n      types: [],\n      type: 0,\n      result: '',\n      target: '',\n      period: '',\n      id: 0,\n    }\n  }\n\n\n  componentDidMount() {\n    this.getKpi(1);\n    this.getTypes();\n    this.setPeriodDate();\n  }\n\n  async getKpi(id) {\n    const response = await fetch(`http://localhost:3001/kpi/${id}`);\n    const data = await response.json();\n    this.setState({data: data});\n  }\n\n  async setKpi(values) {\n    const response = await fetch(`http://localhost:3001/kpi/1`, {\n      method: 'POST',\n      mode: 'cors',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        typeId: values.type,\n        period: values.period,\n        result: values.result,\n        target: values.target,\n        userId: 1\n      })\n    });\n\n    const data = await response.json();\n    this.setState({data});\n  }\n\n  async setReadKpi(values) {\n    const response = await fetch(`http://localhost:3001/kpi/1`, {\n      method: 'PUT',\n      mode: 'cors',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        id: values.id,\n        typeId: values.type,\n        period: values.period,\n        result: values.result,\n        target: values.target\n      })\n    });\n\n    const data = await response.json();\n\n    this.setState({data});\n  }\n\n  async deleteKpi(key) {\n    const response = await fetch(`http://localhost:3001/kpi/1`, {\n      method: 'DELETE',\n      mode: 'cors',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        deleteId: key\n      })\n    });\n\n    const data = await response.json();\n    this.setState({data});\n  }\n\n  async getTypes() {\n    const response = await fetch(`http://localhost:3001/types`);\n    const types = await response.json();\n    this.setState({types});\n  }\n\n\n  onDrawerCreateChange = (isOpen) => {\n    this.setState({\n      isShowDrawerCreate: isOpen\n    })\n  }\n\n  handleDelete = (key) => {\n    this.deleteKpi(key);\n  };\n\n\n  renderTable = () => {\n    const {data, currentPeriod} = this.state;\n    const currentData = data.filter(item => item.period === currentPeriod)\n    const columns = [\n      {\n        title: 'Тип',\n        dataIndex: 'type',\n        key: 'type',\n      },\n      {\n        title: 'Цель',\n        dataIndex: 'target',\n        key: 'target',\n      },\n      {\n        title: 'Дата создания',\n        key: 'datecreate',\n        dataIndex: 'datecreate',\n      },\n      {\n        title: 'Результат',\n        key: 'result',\n        dataIndex: 'result',\n\n      },\n      {\n        title: 'Период',\n        key: 'period',\n        dataIndex: 'period',\n      },\n      {\n        title: '',\n        dataIndex: 'delete',\n        render: (text, record) =>\n          this.state.data.length >= 1 ? (\n            [<EditFilled className='kpiRead' onClick={() => this.handleRead(record)} />,\n            <Popconfirm title=\"Удалить?\" onConfirm={() => this.handleDelete(record.key)}>\n              <DeleteFilled />\n            </Popconfirm>\n          ]\n          ) : null,\n      },\n    ];\n    const dataTable = [];\n\n    currentData.length && currentData.forEach((item, i) => {\n      dataTable.push({\n        key: item.id,\n        type: item.type.name,\n        target: item.target,\n        datecreate: moment(item.dateCreate).format(\"DD.MM.YYYY\"),\n        result: item.result,\n        period: item.period,\n        typeId: item.type.id\n      })\n    })\n\n    return (<Table columns={columns} dataSource={dataTable} />)\n  }\n\n  setPeriodDate = () => {\n    const allPeriod = [];\n    const currentMonth = moment().format('MMMM');\n    const currentDayInMonth = moment().daysInMonth();\n    const currentYear = moment().year();\n    const currentPeriod = `1-${currentDayInMonth} ${currentMonth} ${currentYear}`;\n\n    for (let i = 7; i > -7; i--) {\n      const month = moment().subtract(i, 'months').format('MMMM');\n      const dayInMonth = moment().subtract(i, 'months').daysInMonth();\n      const year = moment().subtract(i, 'months').year();\n      allPeriod.unshift(\n        `1-${dayInMonth} ${month} ${year}`\n      )\n    }\n\n    this.setState({\n      periods: allPeriod,\n      currentPeriod\n    })\n\n  }\n\n  changePeriod = (currentPeriod) => {\n    this.setState({\n      currentPeriod\n    })\n  }\n\n  renderPeriodDate = () => {\n    const {\n      currentPeriod,\n      periods\n    } = this.state;\n\n    return (\n      <Select onChange={this.changePeriod} className={'kpiButtonPeriod'} value={currentPeriod}>\n        {periods.length && periods.map(period => {\n          return (\n            <Option key={period} value={period}>{period}</Option>\n          )\n        })}\n      </Select>\n    )\n  }\n\n  handleRead = (record) => {\n    this.setState({\n      type: record.typeId,\n      result: record.result,\n      target: record.target,\n      period: record.period,\n      id: record.key,\n    })\n\n    this.onDrawerReadChange(true);\n  }\n\n  onDrawerReadChange = (isOpen) => {\n    this.setState({\n      isShowDrawerRead: isOpen,\n    })\n  }\n\n\n  createKPI = (values) => {\n    this.setKpi(values);\n\n    this.setState({\n      isShowDrawerCreate: false\n    })\n  }\n\n  readKpi = (values) => {\n    values.id = this.state.id;\n    this.setReadKpi(values);\n\n    this.setState({\n      isShowDrawerRead: false\n    })\n  }\n\n  render() {\n    const {\n      data,\n      isShowDrawerCreate,\n      isShowDrawerRead,\n      currentPeriod,\n      periods,\n      types,\n      type,\n      result,\n      target,\n      period,\n    } = this.state;\n\n    return (\n      <div className='kpiBlock'>\n        <div className='kpiHeader'>KPI</div>\n        <div className='kpiContent'>\n          <div className='kpiContentHeader'>\n            <button onClick={() => this.onDrawerCreateChange(true)} className='kpiButtonAdd'>Добавить KPI</button>\n            <div className='kpiPeriod'>\n              Период\n              {this.renderPeriodDate()}\n            </div>\n          </div>\n          <div className='kpiTableContainer'>\n            {this.renderTable()}\n          </div>\n        </div>\n        {isShowDrawerCreate ?\n          <Drawer\n          width={450}\n          title=\"Добавить KPI\"\n          placement=\"right\"\n          closable={false}\n          onClose={() => this.onDrawerCreateChange(false)}\n          visible={isShowDrawerCreate}\n          destroyOnClose={true}\n        >\n          <KpiCreateForm\n            createKPI={this.createKPI}\n            currentPeriod={currentPeriod}\n            periods={periods}\n            types={types}\n          />\n        </Drawer> : null\n        }\n\n        {isShowDrawerRead ?\n          <Drawer\n          width={450}\n          title=\"Добавить KPI\"\n          placement=\"right\"\n          closable={false}\n          onClose={() => this.onDrawerReadChange(false)}\n          visible={isShowDrawerRead}\n          destroyOnClose={true}\n        >\n          <KpiReadForm\n            readKpi={this.readKpi}\n            currentPeriod={currentPeriod}\n            periods={periods}\n            types={types}\n            type={type}\n            result={result}\n            target={target}\n            period={period}\n          />\n        </Drawer> : null\n        }\n\n      </div>\n    )\n  }\n}\nexport default InfoCard;\n","/home/roman/Рабочий стол/motivation/front/src/components/Sprints/Sprints.js",["70","71","72","73"],"/home/roman/Рабочий стол/motivation/front/src/components/Incidents/IncidentEdit.js",[],{"ruleId":"74","severity":1,"message":"75","line":80,"column":7,"nodeType":"76","messageId":"77","endLine":80,"endColumn":15},{"ruleId":"74","severity":1,"message":"78","line":5,"column":37,"nodeType":"76","messageId":"77","endLine":5,"endColumn":43},{"ruleId":"74","severity":1,"message":"79","line":4,"column":10,"nodeType":"76","messageId":"77","endLine":4,"endColumn":14},{"ruleId":"74","severity":1,"message":"80","line":4,"column":16,"nodeType":"76","messageId":"77","endLine":4,"endColumn":21},{"ruleId":"74","severity":1,"message":"78","line":4,"column":31,"nodeType":"76","messageId":"77","endLine":4,"endColumn":37},{"ruleId":"74","severity":1,"message":"81","line":5,"column":10,"nodeType":"76","messageId":"77","endLine":5,"endColumn":20},{"ruleId":"74","severity":1,"message":"82","line":10,"column":7,"nodeType":"76","messageId":"77","endLine":10,"endColumn":21},{"ruleId":"74","severity":1,"message":"83","line":58,"column":7,"nodeType":"76","messageId":"77","endLine":58,"endColumn":19},{"ruleId":"74","severity":1,"message":"84","line":10,"column":9,"nodeType":"76","messageId":"77","endLine":10,"endColumn":17},{"ruleId":"74","severity":1,"message":"85","line":268,"column":7,"nodeType":"76","messageId":"77","endLine":268,"endColumn":11},{"ruleId":"74","severity":1,"message":"86","line":2,"column":8,"nodeType":"76","messageId":"77","endLine":2,"endColumn":14},{"ruleId":"74","severity":1,"message":"78","line":6,"column":37,"nodeType":"76","messageId":"77","endLine":6,"endColumn":43},{"ruleId":"74","severity":1,"message":"87","line":10,"column":3,"nodeType":"76","messageId":"77","endLine":10,"endColumn":14},{"ruleId":"74","severity":1,"message":"88","line":11,"column":3,"nodeType":"76","messageId":"77","endLine":11,"endColumn":28},"no-unused-vars","'tabValue' is assigned a value but never used.","Identifier","unusedVar","'Select' is defined but never used.","'Form' is defined but never used.","'Input' is defined but never used.","'DatePicker' is defined but never used.","'formItemLayout' is assigned a value but never used.","'userSettings' is assigned a value but never used.","'TextArea' is assigned a value but never used.","'data' is assigned a value but never used.","'moment' is defined but never used.","'BugOutlined' is defined but never used.","'ExclamationCircleOutlined' is defined but never used."]